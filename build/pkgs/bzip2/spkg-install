#!/usr/bin/env bash

if [ -z "$SAGE_LOCAL" ]; then
    echo >&2 "SAGE_LOCAL undefined ... exiting"
    echo >&2 "Maybe run 'sage --sh'?"
    exit 1
fi

if [ "x$CFLAG64" = x ]; then
    CFLAG64=-m64
fi

if [ "x$SAGE64" = xyes ]; then
    echo "Building a 64-bit version of bzip2"
    CFLAGS="$CFLAG64 $CFLAGS"
fi

export CFLAGS="-O2 -g $CFLAGS"

cd src

########################################################################
# Patch bzip2
########################################################################

for patch in ../patches/*.patch; do
    [ -r "$patch" ] || continue  # Skip non-existing or non-readable patches
    patch -p1 <"$patch"
    if [ $? -ne 0 ]; then
        echo >&2 "Error applying '$patch'"
        exit 1
    fi
done

########################################################################
# Build bzip2
########################################################################

# Since bzip2 doesn't use configure, we need to pass flags as arguments
# to make.

# Static build
$MAKE CC="$CC" CFLAGS="$CFLAGS"
if [ $? -ne 0 ]; then
    echo >&2 "Error building bzip2"
    exit 1
fi

$MAKE install PREFIX="$SAGE_LOCAL" CC="$CC" CFLAGS="$CFLAGS"
if [ $? -ne 0 ]; then
    echo >&2 "Error installing bzip2"
    exit 1
fi

# Shared build
case "$UNAME" in
    "CYGWIN")
        Makefile=Makefile-libbz2_dll
        ;;
    "Darwin")
        Makefile=Makefile-libbz2_dylib
        ;;
    *)
        Makefile=Makefile-libbz2_so
        ;;
esac
$MAKE -f $Makefile CC="$CC" CFLAGS="$CFLAGS"
if [ $? -ne 0 ]; then
    echo >&2 "Error building bzip2"
    exit 1
fi

$MAKE -f $Makefile install PREFIX="$SAGE_LOCAL" CC="$CC" CFLAGS="$CFLAGS"
if [ $? -ne 0 ]; then
    echo >&2 "Error installing bzip2"
    exit 1
fi
